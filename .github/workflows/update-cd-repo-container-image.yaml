# Reusable Workflow
# https://docs.github.com/en/actions/using-workflows/reusing-workflows
#
# Update a container image reference in the Continuous Delivery git repo
#
# PRE-REQ:
# Calling repo MUST have the CI_PAT secret defined within repo's secrets
# Calling repo MUST have the SLACK_CI_APP secret defined within repo's secrets
# Call this reusable workflow with "secrets: inherit"

name: Update image ref in CD git repo

on:
  workflow_call:
    inputs:
      app:
        description: Application to update
        type: string
        required: true
      env:
        description: Target environment for the update. Maps to Argo CD overlay folders (e.g. dev, stag, prod)
        default: dev
        type: string
        required: true
      tag:
        description: New tag to be applied
        type: string
        required: true
      cd_git_repo:
        description: Continuous Delivery git repo
        type: string
        required: true
      cd_git_repo_ref:
        description: Continuous Delivery git repo reference
        type: string
        default: main
        required: false
      artifact_location:
        description: Container artifact registry location
        type: string
        default: europe-north1-docker.pkg.dev/avtalsbanken-gke/docker
        required: false
        
env:
  # Relative path where to checkout CD repo
  CD_REPO_CHECKOUT_PATH: cd-repo


jobs:
  update_image_in_cd_repo:
    name: Update CD git repo
    runs-on: ubuntu-latest
    # Add "id-token" with the intended permissions.
    # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    permissions:
      contents: write
      id-token: write
    steps:
      - name: log work to be done
        run: |
            echo "::group::Tasks..."
            echo "Update Git repo ${{ inputs.cd_git_repo }}:${{ inputs.cd_git_repo_ref }} "
            echo "by modifying the Kustomize file under ArgoCD path ${{ inputs.app }}/overlays/${{ inputs.env }} with"
            echo "images:"
            echo "- digest: ${{ inputs.tag }}"
            echo "  name: ${{ inputs.artifact_location }}/${{ inputs.app }}"
            echo "::endgroup::"

      - run: mkdir -p ${{ env.CD_REPO_CHECKOUT_PATH }}
        shell: bash

      - name: Checkout CD repo
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.cd_git_repo }}
          path: ${{ env.CD_REPO_CHECKOUT_PATH }}
          ref: ${{ inputs.cd_git_repo_ref }}
          token: ${{ secrets.CI_PAT }}

      # Update Container image in Continuous Delivery repo
      # Use Kustomize
      - name: Run Kubernetes tools
        uses: stefanprodan/kube-tools@v1
        with:
          command: |
            cd ${{ env.CD_REPO_CHECKOUT_PATH }}
            # Use the right ArgoCD overlay folder
            cd ${{ inputs.app }}/overlays/${{ inputs.env }}
            kustomize edit set image ${{ inputs.artifact_location }}/${{ inputs.app }}:${{ inputs.tag }}

      # Push git changes
      - uses: EndBug/add-and-commit@v9
        id: add-and-commit
        with:
          cwd: ${{ env.CD_REPO_CHECKOUT_PATH }}
          committer_name: 'Github Actions: ${{ github.repository }}'
          author_name: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          message: ${{ inputs.env }} deploy - ${{ inputs.app }}:${{ inputs.tag }}

      - name: Updating job summary
        shell: bash
        run: |
          echo "Application: **${{ inputs.app }}**" >> $GITHUB_STEP_SUMMARY
          echo "Environment: **${{ inputs.env }}**" >> $GITHUB_STEP_SUMMARY
          echo "Tag: **${{ inputs.tag }}**" >> $GITHUB_STEP_SUMMARY
          echo "Target repo: ${{ inputs.cd_git_repo }}:${{ steps.add-and-commit.outputs.commit_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "Target file: ${{ inputs.app }}/overlays/${{ inputs.env }}/kustomize.yaml" >> $GITHUB_STEP_SUMMARY
          echo "Image: ${{ inputs.artifact_location }}/${{ inputs.app }}:${{ inputs.tag }}" >> $GITHUB_STEP_SUMMARY

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.19.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'builds'
          # For posting a simple plain text message
          slack-message: |
            Release request successful

            app: ${{ inputs.app }}
            env: ${{ inputs.env }}
            tag: ${{ inputs.tag }}

          payload: |
            {
                "text": "Deployment request successful",
                "blocks": [
                    {
                        "type": "header",
                        "text": {
                            "type": "plain_text",
                            "text": ":rocket: ${{ inputs.app }} deployment request successful",
                            "emoji": true
                        }
                    },
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "env: *${{ inputs.env }}*\ntag: tag: ${{ inputs.tag }}"
                        }
                    },
                    {
                        "type": "actions",
                        "elements": [
                            {
                                "type": "button",
                                "text": {
                                    "type": "plain_text",
                                    "text": "GitHub Action run ☁️",
                                    "emoji": true
                                },
                                "style": "primary",
                                "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                            }
                        ]
                    }
                ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_CI_APP }}